<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>canvas</title>
</head>

<body>
    <canvas id="canvas" width="600" height="600"></canvas>
    <script>
        let hour = ""
        let min = ""
        let seconds = ""


        const getTime = () => {
            const date = new Date()
            hour = date.getHours()
            hour = hour > 12 ? hour - 12 : hour
            min = date.getMinutes()
            seconds = date.getSeconds()

        }


        class Clock {
            constructor(className) {
                this.ctx = null;
                this.init(className);
            }
            init(className) {
                this.getCtx(className);
            }
            getCtx(className) {
                const canvas = document.querySelector(className);
                this.ctx = canvas.getContext("2d");
                this.ctx.save()
                this.ctx.rotate(-Math.PI / 2)
                this.ctx.translate(-300, 300);
            }
            createBorder(strokeStyle = "grey") {
                this.ctx.beginPath()

                this.ctx.arc(0, 0, 250, 0, 2 * Math.PI);

                this.ctx.strokeStyle = strokeStyle;
                this.ctx.lineWidth = 10;

                this.ctx.stroke();

                this.ctx.closePath()
            }
            createHourSmall(color = 'orange') {

                this.ctx.strokeStyle = color
                this.ctx.lineWidth = 2

                for (let i = 0; i < 60; i++) {
                    this.ctx.rotate(Math.PI / 30)
                    this.ctx.beginPath()
                    this.ctx.moveTo(230, 0)
                    this.ctx.lineTo(240, 0)
                    this.ctx.stroke()
                    this.ctx.closePath()
                }
            }
            createHourBig(color = 'grey') {
                this.ctx.strokeStyle = color
                this.ctx.lineWidth = 5

                for (let i = 0; i < 12; i++) {
                    this.ctx.beginPath()
                    this.ctx.rotate(Math.PI / 6)
                    this.ctx.moveTo(220, 0)
                    this.ctx.lineTo(250, 0)
                    this.ctx.stroke()
                    this.ctx.closePath()
                }
            }

            createSecondLine() {
                this.ctx.beginPath()

                const angle = Math.PI / 30 * seconds
                this.ctx.rotate(angle)
                this.ctx.moveTo(-30, 0)
                this.ctx.lineTo(200, 0)

                this.ctx.strokeStyle = "red"
                this.ctx.lineWidth = 2
                this.ctx.stroke()
                this.ctx.rotate(-angle)
                this.ctx.closePath()

            }
            createMinLine() {
                this.ctx.beginPath()

                const angle = 2 * Math.PI / 60 * min + 2 * Math.PI / 60 / 60 * seconds
                this.ctx.rotate(angle)

                this.ctx.moveTo(-20, 0)
                this.ctx.lineTo(180, 0)

                this.ctx.strokeStyle = "#000"
                this.ctx.lineWidth = 4
                this.ctx.stroke()
                this.ctx.rotate(-angle)


                this.ctx.closePath()
            }

            createHourLine() {
                this.ctx.beginPath()

                const angle = 2 * Math.PI / 12 * hour + 2 * Math.PI / 12 / 60 * min + 2 * Math.PI / 12 / 60 / 60 * seconds
                this.ctx.rotate(angle)

                this.ctx.moveTo(-20, 0)
                this.ctx.lineTo(140, 0)

                this.ctx.strokeStyle = "#000"
                this.ctx.lineWidth = 5
                this.ctx.stroke()

                this.ctx.rotate(-angle)


                this.ctx.closePath()
            }
            createCenter() {
                this.ctx.arc(0, 0, 10, 0, 2 * Math.PI)
                this.ctx.fillStyle = "aqua"
                this.ctx.fill()
            }
            render() {
                getTime()

                this.ctx.translate(300, -300);

                this.ctx.clearRect(0, 0, -600, 600)

                this.ctx.translate(-300, 300);

                this.createBorder();
                this.createHourSmall("orange")
                this.createHourBig("grey")

                this.createSecondLine()
                this.createMinLine()
                this.createHourLine()

                this.createCenter()


            }

        }
        const clock = new Clock("#canvas")
        setInterval(() => {
            clock.render()
        }, 1000, false)

    </script>

</body>

</html>